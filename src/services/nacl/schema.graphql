type awsNetworkAcl @key(fields: "id") {
  id: String! @id @search(by: [hash])
  arn: String! @id @search(by: [hash, regexp])
  default: Boolean
  inboundRules: [awsNetworkAclRule]
  outboundRules: [awsNetworkAclRule]
  associatedSubnets: [awsNetworkAclAssociatedSubnet]
  region: String! @search(by: [hash, regexp])
  tags: [Tag]
  vpc: [awsVpc] @hasInverse(field: nacl)
  # subnet: [awsSubnet] @hasInverse(field: nacl)
  vpcId: String! @search(by: [hash, regexp])
}

type awsNetworkAclRule {
  id: String! @id
  ruleNumber: Int
  protocol: String @search(by: [hash, regexp])
  portRange: String @search(by: [hash, regexp])
  source: String @search(by: [hash, regexp])
  destination: String @search(by: [hash, regexp])
  allowOrDeny: String @search(by: [hash, regexp])
}

type awsNetworkAclAssociatedSubnet {
  id: String! @id
  networkAclAssociationId: String @search(by: [hash, regexp])
  subnetId: String @search(by: [hash, regexp])
}
